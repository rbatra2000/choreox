{"version":3,"sources":["assets/audio.mp3","screens/LoginScreen.js","screens/RegisterScreen.js","constants/shared.js","constants/global.js","constants/testdb.js","components/DragBall.js","components/DragDrop.js","components/AudioPlayer.js","screens/FormationsScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","to","Box","mt","Link","GRID_WIDTH","Dimensions","get","GRIDC_INC","Reducer","state","action","formNum","num","newFormation","lodash","cloneDeep","database","splice","starts","time","initialState","x","y","duration","error","Context","createContext","Store","children","useReducer","dispatch","Provider","DragBall","props","changeLoc","handler","coordinates","String","convert","scale","Animated","Value","pan","ValueXY","position","addListener","coord","panResponder","PanResponder","create","onStartShouldSetPanResponder","e","gesture","onPanResponderTerminationRequest","onPanResponderGrant","setOffset","setValue","extractOffset","spring","toValue","friction","start","onPanResponderMove","gestureState","parseInt","updateText","event","dx","dy","onPanResponderRelease","flattenOffset","setState","context","parseFloat","bind","max","Math","floor","random","hex","this","newX","newY","dur","GRID_HEIGHT","timing","easing","Easing","linear","char","val","round","toFixed","View","renderDraggable","panStyle","transform","translateX","translateY","rotate","style","styles","draggy","panHandlers","circle","Text","ballText","Component","contextType","StyleSheet","justifyContent","cursor","userSelect","CIRCLE_RADIUS","height","borderRadius","zIndex","fontSize","Formations","forwardRef","ref","useContext","useState","data","setData","useImperativeHandle","nextFormation","length","prevFormation","refs","changeLocation","dancer","list","useEffect","key","dict","move","changeColor","elements","k","push","Object","entries","mainContainer","grid","flow","columns","gap","cell","i","C_INC","createGrid","flex","borderColor","AudioPlayer","instance","setInstance","loading","setLoading","playAudio","player","play","pauseAudio","pause","dropPoint","points","add","getCurrentTime","labelText","timeListener","newForm","binarySearch","arr","end","mid","startFunction","on","audioContext","window","AudioContext","webkitAudioContext","initialPoints","options","containers","overview","document","getElementById","zoomview","mediaElement","querySelector","webAudio","timeLabelPrecision","Peaks","init","err","peaks","console","message","src","sound","toString","ButtonContainer","styled","div","StyledButton","FormationsScreen","dragRef","useRef","audioRef","setPlay","bpm","DragDrop","onClick","current","textAlign","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9d96a3a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/audio.aab9cdd0.mp3\";","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\n\n// THIS IS AN EXAMPLE OF A LOGIN SCREEN\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n// EXAMPLE OF A REGISTER SCREEN\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import { Dimensions } from 'react-native';\n\nconst GRID_WIDTH = Dimensions.get('window').width;\nconst GRID_HEIGHT = 500;\nconst CIRCLE_RADIUS = 30;\nconst R_INC = 4;\nconst C_INC = 8;\nconst GRIDR_INC = GRID_HEIGHT / R_INC;\nconst GRIDC_INC = GRID_WIDTH / C_INC;\n\nconst PRIMARY = \"#0E1111\"\nconst SECONDARY = \"#FFFFFF\"\n\nexport {GRID_WIDTH, CIRCLE_RADIUS, GRID_HEIGHT, R_INC, C_INC, GRIDR_INC, GRIDC_INC, PRIMARY, SECONDARY};\n","import React, { createContext, useReducer } from \"react\";\nimport {db, starts} from './testdb';\nimport lodash from 'lodash';\n\nconst Reducer = (state, action) => {\n    switch (action.type) {\n        case 'NEXT_FORMATION':\n            return {\n                ...state,\n                formNum: state.formNum + 1,\n            };\n        case 'PREV_FORMATION':\n            return {\n                ...state,\n                formNum: state.formNum - 1,\n            };\n        case 'RESET_FORMATION':\n            return {\n                ...state,\n                formNum: 0,\n            };\n        case 'SET_FORMATION':\n            return {\n                ...state,\n                formNum: action.num,\n            };\n        case 'ADD_FORMATION':\n            var newFormation = lodash.cloneDeep(state.database[state.formNum]);\n            state.database.splice(state.formNum+1, 0, newFormation);\n            state.starts.splice(state.formNum+1, 0, action.time);\n\n            return {\n                ...state,\n                formNum: state.formNum + 1,\n            };\n        default:\n            return state;\n    }\n};\n\nconst initialState = {\n    formNum: 0,\n    database: db,\n    starts: starts,\n    error: null\n};\n\nconst Store = ({ children }) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n    return (\n        <Context.Provider value={[state, dispatch]}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n","const db = [\n    {\n        \"dancers\": {\n            \"rohit\": {\n                x: -0.50,\n                y: 2.50,\n                color: \"lightblue\"\n            },\n            \"ritik\": {\n                x: 0.50,\n                y: 2.50,\n                color: \"pink\"\n            },\n            \"maya\": {\n                x: 0.00,\n                y: 2.00,\n                color: \"pink\"\n            }\n        },\n        duration: 250,\n    },\n    {\n        \"dancers\": {\n            \"rohit\": {\n                x: -0.50,\n                y: .5,\n                color: \"lightblue\"\n            },\n            \"ritik\": {\n                x: 0.50,\n                y: .5,\n                color: \"pink\"\n            },\n            \"maya\": {\n                x: 0.00,\n                y: 0.00,\n                color: \"pink\"\n            },\n        },\n        duration: 500,\n    },\n    {\n        \"dancers\": {\n            \"rohit\": {\n                x: 0.00,\n                y: 1.00,\n                color: \"lightblue\"\n            },\n            \"ritik\": {\n                x: 0.00,\n                y: 0.50,\n                color: \"pink\"\n            },\n            \"maya\": {\n                x: 0.00,\n                y: 1.50,\n                color: \"pink\"\n            },\n        },\n        duration: 400,\n    },\n    {\n        \"dancers\": {\n            \"rohit\": {\n                x: 0.50,\n                y: 1.50,\n                color: \"lightblue\"\n            },\n            \"ritik\": {\n                x: -0.50,\n                y: 1.50,\n                color: \"pink\"\n            },\n            \"maya\": {\n                x: 0.00,\n                y: 1.50,\n                color: \"pink\"\n            },\n        },\n        duration: 750,\n    }\n]\n\nconst starts = [\n    0,5,8,10\n]\n\nexport { db, starts };","import React, { Component } from \"react\";\nimport { StyleSheet, View, Text, PanResponder, Animated, Easing } from \"react-native\";\nimport { GRID_WIDTH, CIRCLE_RADIUS, GRID_HEIGHT, GRIDR_INC, GRIDC_INC } from '../constants/shared';\nimport { Context } from '../constants/global';\n\n// NOTE: Pretty much set just need to be able to transition from formation to formation\n// Need to clean up and convert to pure component\n// import * as firebase from 'firebase'\n// import 'firebase/firestore';\n\n\n// //NOTE: Be prepared to protect against empty strings as name\n// if (!firebase.apps.length) {\n//     firebase.initializeApp({\n//         apiKey: \"AIzaSyCP7f-0gM04PNKyg_61zNHrEcoGuv5csww\",\n//         authDomain: \"choreox.firebaseapp.com\",\n//         databaseURL: \"https://choreox.firebaseio.com\",\n//         projectId: \"choreox\",\n//         storageBucket: \"choreox.appspot.com\",\n//         messagingSenderId: \"282857958796\",\n//         appId: \"1:282857958796:web:a4823f4d0f62548ee9baa9\",\n//         measurementId: \"G-G85QRHSBW3\"\n//     });\n// }\n// const dbh = firebase.firestore();\n\n\nclass DragBall extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.changeLoc = props.handler;\n\n        this.state = {\n            coordinates: \"(\" + String(this.convert(props.x, \"R\")) + \",\" + String(this.convert(props.y, \"C\")) + \")\",\n            scale: new Animated.Value(1), // scale\n            pan: new Animated.ValueXY({\n                x: 0,\n                y: 0,\n            }), // Location of Circle\n            name: props.name,\n            color: props.color\n        };\n\n        this.state.pan.x = new Animated.Value(props.x);\n        this.state.pan.y = new Animated.Value(props.y);\n        this.position = { x: props.x, y: props.y }\n        this.state.pan.addListener((value) => this.position = value);\n        this.coord = {x: props.x, y: props.y};\n\n\n        // Weird bug where if u \"flick\" the circle (ur finger never leaves the box) the circle goes flying but the coordinates don't change? not sure how to fix\n        this.panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: (e, gesture) => true,\n            onPanResponderTerminationRequest: () => true,\n            // Initially, set the value of x and y to 0 (the center of the screen)\n            onPanResponderGrant: (e, gesture) => {\n                // Set the initial value to the current state\n                this.state.pan.setOffset({\n                    x: this.position.x,\n                    y: this.position.y\n                })\n                this.state.pan.setValue({ x: 0, y: 0 });\n                this.state.pan.extractOffset();\n                Animated.spring(\n                    this.state.scale,\n                    // CHANGE THE SPECIFIC SCALE SIZE\n                    { toValue: 1.5, friction: 3 }\n                ).start();\n            },\n\n            // When we drag/pan the object, set the delate to the states pan position\n            onPanResponderMove: (e, gestureState) => {\n                if (this.coord.x < GRID_WIDTH / -2 || this.coord.x > GRID_WIDTH / 2\n                    || this.coord.y > GRID_HEIGHT || this.coord.y < 0) {\n                    this.coord = {x: parseInt(this.position.x), y: parseInt(this.position.y)};\n                } else {\n                    this.updateText();\n                }\n\n                Animated.event([\n                    null, { dx: this.state.pan.x, dy: this.state.pan.y }\n                ])(e, gestureState);\n\n            },\n\n\n            onPanResponderRelease: (e, gesture) => {\n\n                // Flatten the offset to avoid erratic behavior\n                this.state.pan.flattenOffset();\n                Animated.spring(\n                    this.state.scale,\n                    { toValue: 1, friction: 4 }\n                ).start();\n                if (this.coord.x < GRID_WIDTH / -2 || this.coord.x > GRID_WIDTH / 2\n                    || this.coord.y > GRID_HEIGHT || this.coord.y < 0) {\n\n                    Animated.spring(this.state.pan, {\n                        toValue: { x: 0, y: 0 },\n                        friction: 4,\n                    }).start();\n                    this.coord = {x: 0, y: 0};\n                    this.setState({\n                        coordinates: \"(\" + String(this.coord.x) + \",\" + String(this.coord.y) + \")\",\n                    })\n\n                }\n\n\n                // Firebase\n                // dbh.collection(\"people\").doc(this.state.name).set({\n                //     x: this.convertToStageR(this.coordX),\n                //     y: this.convertToStageC(this.coordY),\n                // });\n                this.changeLoc(this.context[0].formNum, this.state.name, parseFloat(this.convert(this.coord.x, \"R\")), parseFloat(this.convert(this.coord.y, \"C\")));\n\n            }\n\n        });\n        this.updateText = this.updateText.bind(this);\n    }\n\n    static contextType = Context;\n\n    getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    changeColor(hex) {\n        this.setState({\n            color: hex,\n        })\n    }\n\n    move(newX, newY, dur) {\n        this.coord = {x: newX * GRIDC_INC, y: newY * GRIDR_INC}\n        Animated.timing(this.state.pan, {\n            toValue: { x: this.coord.x, y: this.coord.y },\n            duration: dur,\n            easing: Easing.linear,\n        }).start();\n\n        this.setState({\n            coordinates: \"(\" + String(newX) + \",\" + String(newY) + \")\",\n        });\n    }\n\n    convert(num, char) {\n        var val = GRIDR_INC;\n        if (char === \"R\") {\n            val = GRIDC_INC;\n        }\n        return (Math.round((num / (val)) / .25) * .25).toFixed(2);\n    }\n\n    updateText() {\n\n        this.coord = {x: parseInt(this.position.x), y: parseInt(this.position.y)}\n\n        this.setState({\n            coordinates: \"(\" + String(this.convert(this.coord.x, \"R\")) + \",\" + String(this.convert(this.coord.y, \"C\"))\n        })\n    }\n\n    render() {\n        return (\n            <View>\n                {this.renderDraggable()}\n            </View>\n        );\n    }\n\n    renderDraggable() {\n        // Destructure the value of pan from the state\n        let { pan, scale } = this.state;\n\n        // Calculate the x and y transform from the pan value\n        let [translateX, translateY] = [pan.x, pan.y];\n\n        let rotate = '0deg';\n\n        // Calculate the transform property and set it as a value for our style which we add below to the Animated.View component\n        let panStyle = { transform: [{ translateX }, { translateY }, { rotate }, { scale }] };\n\n        return (\n            <View style={styles.draggy}>\n                <Animated.View\n                    {...this.panResponder.panHandlers}\n                    style={[panStyle, styles.circle, { backgroundColor: this.state.color }]}\n                >\n                    <Text style={styles.ballText}>{this.state.coordinates}</Text>\n                    <Text>{this.state.name}</Text>\n                </Animated.View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n\n    draggy: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        cursor: \"move\",\n        userSelect: \"none\",\n    },\n    circle: {\n        width: CIRCLE_RADIUS * 2,\n        height: CIRCLE_RADIUS * 2,\n        borderRadius: CIRCLE_RADIUS,\n        alignItems: \"center\",\n        justifyContent: 'center',\n        zIndex: 10,\n        position: \"absolute\",\n    },\n\n    ballText: {\n        fontSize: 10,\n    }\n});\n\nexport default DragBall;\n\n\n\n\n// Hooks Attempt:\n// const DragBall = (props) => {\n//     const handler = props.handler;\n//     const [state, setState] = useState({\n//         coordinates: \"(\" + String((Math.round((props.x / (GRIDR_INC)) / .25) * .25).toFixed(2)) + \",\" + String((Math.round((props.y / (GRIDC_INC)) / .25) * .25).toFixed(2)) + \")\",\n//         scale: new Animated.Value(1), // scale\n//         pan: new Animated.ValueXY({\n//             x: props.x,\n//             y: props.y,\n//         }), // Location of Circle\n//         name: props.name,\n//         color: props.color\n//     });\n\n//     var _val = { x: props.x, y: props.y };\n//     state.pan.addListener((value) => _val = value);\n//     var coord = { x: props.x, y: props.y };\n\n//     const convert = (x, ch) => {\n//         switch (ch) {\n//             case \"R\":\n//                 return (Math.round((x / (GRIDR_INC)) / .25) * .25).toFixed(2);\n//             default:\n//                 return (Math.round((x / (GRIDC_INC)) / .25) * .25).toFixed(2);\n\n//         }\n//     };\n\n//     var updateText = () => {\n//         coord = { x: parseInt(_val.x), y: parseInt(_val.y) }\n\n//         setState({\n//             ...state,\n//             coordinates: \"(\" + String(convert(coord.x, \"R\")) + \",\" + String(convert(coord.y, \"C\"))\n//         })\n//     }\n\n//     const panResponder = PanResponder.create({\n//         onStartShouldSetPanResponder: (e, gesture) => true,\n//         onPanResponderTerminationRequest: () => true,\n//         // Initially, set the value of x and y to 0 (the center of the screen)\n//         onPanResponderGrant: (e, gesture) => {\n//             // Set the initial value to the current state\n//             state.pan.setOffset({\n//                 x: _val.x,\n//                 y: _val.y\n//             })\n//             setState({ ...state, pan: { x: 0, y: 0 } })\n//             state.pan.extractOffset();\n//             Animated.spring(\n//                 state.scale,\n//                 // CHANGE THE SPECIFIC SCALE SIZE\n//                 { toValue: 1.5, friction: 3 }\n//             ).start();\n//         },\n\n//         // When we drag/pan the object, set the delate to the states pan position\n//         onPanResponderMove: (e, gestureState) => {\n//             if (coord.x < GRID_WIDTH / -2 || coord.x > GRID_WIDTH / 2\n//                 || coord.y > GRID_HEIGHT || coord.y < 0) {\n//                 coord.x = parseInt(_val.x); //+ this.state.num * 60;\n//                 coord.y = parseInt(_val.y); // + this.state.num * 60;\n//             } else {\n//                 updateText();\n//             }\n\n//             Animated.event([\n//                 null, { dx: state.pan.x, dy: state.pan.y }\n//             ])(e, gestureState);\n\n//         },\n\n\n//         onPanResponderRelease: (e, gesture) => {\n\n//             // Flatten the offset to avoid erratic behavior\n//             state.pan.flattenOffset();\n//             Animated.spring(\n//                 state.scale,\n//                 { toValue: 1, friction: 4 }\n//             ).start();\n\n//             if (coord.x < GRID_WIDTH / -2 || coord.x > GRID_WIDTH / 2\n//                 || coord.y > GRID_HEIGHT || coord.y < 0) {\n\n//                 Animated.spring(state.pan, {\n//                     toValue: { x: 0, y: 0 },\n//                     friction: 4,\n//                 }).start();\n\n//                 coord = { x: 0, y: 0 }\n//                 setState({\n//                     ...state,\n//                     coordinates: \"(\" + String(coord.x) + \",\" + String(coord.y) + \")\",\n//                 })\n\n//             }\n\n\n//             // Firebase\n//             // dbh.collection(\"people\").doc(this.state.name).set({\n//             //     x: this.convertToStageR(this.coordX),\n//             //     y: this.convertToStageC(this.coordY),\n//             // });\n\n//             handler(state.name, convert(coord.x, \"R\"), convert(coord.y, \"C\"));\n//         }\n\n//     });\n\n//     updateText = updateText.bind(this);\n\n//     // for testing\n//     const getRandomInt = (max) => {\n//         return Math.floor(Math.random() * Math.floor(max));\n//     }\n\n//     const changeColor = (hex) => {\n//         setState({\n//             ...state,\n//             color: hex,\n//         })\n//     }\n\n//     const move = (newX, newY, dur) => {\n//         coord = { x: newX * GRIDC_INC, y: newY * GRIDR_INC }\n//         Animated.timing(state.pan, {\n//             toValue: { x: coord.x, y: coord.y },\n//             duration: dur,\n//             easing: Easing.linear,\n//         }).start();\n\n//         setState({\n//             ...state,\n//             coordinates: \"(\" + String(newX) + \",\" + String(newY) + \")\",\n//         });\n//     }\n\n//     const renderDraggable = () => {\n//         // Destructure the value of pan from the state\n//         let { pan, scale } = state;\n\n//         // Calculate the x and y transform from the pan value\n//         let [translateX, translateY] = [pan.x, pan.y];\n\n//         let rotate = '0deg';\n\n//         // Calculate the transform property and set it as a value for our style which we add below to the Animated.View component\n//         let panStyle = { transform: [{ translateX }, { translateY }, { rotate }, { scale }] };\n\n//         return (\n//             <View style={styles.draggy}>\n//                 <Animated.View\n//                     {...panResponder.panHandlers}\n//                     style={[panStyle, styles.circle, { backgroundColor: state.color }]}\n//                 >\n//                     <Text style={styles.ballText}>{state.coordinates}</Text>\n//                     <Text>{state.name}</Text>\n//                 </Animated.View>\n//             </View>\n//         );\n//     }\n\n//     return (\n//         <View>\n//             {renderDraggable()}\n//         </View>\n//     );\n// }","import React, { useState, useEffect, useContext, forwardRef, useImperativeHandle } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport DragBall from './DragBall'\nimport { R_INC, C_INC, GRIDR_INC, GRIDC_INC } from '../constants/shared';\nimport { Grid, Cell } from \"styled-css-grid\";\nimport { Context } from '../constants/global';\n\n\n// NOTE: Pretty much set just need to be able to transition from formation to formation\n// Add realtime updates so if one device changes something it changes on the other AND/oR you can see when another user is active (so you don't want to change anything)\n\n// import * as firebase from 'firebase'\n// import 'firebase/firestore';\n\n// if (!firebase.apps.length) {\n//     firebase.initializeApp({\n//         apiKey: \"AIzaSyCP7f-0gM04PNKyg_61zNHrEcoGuv5csww\",\n//         authDomain: \"choreox.firebaseapp.com\",\n//         databaseURL: \"https://choreox.firebaseio.com\",\n//         projectId: \"choreox\",\n//         storageBucket: \"choreox.appspot.com\",\n//         messagingSenderId: \"282857958796\",\n//         appId: \"1:282857958796:web:a4823f4d0f62548ee9baa9\",\n//         measurementId: \"G-G85QRHSBW3\"\n//     });\n// }\n\n\n// const dbh = firebase.firestore();\n\nconst createGrid = (height) => {\n    const grid = []\n    const cell = <Cell width={1} style={{ backgroundColor: 'lightgray', position: 'relative' }}></Cell>;\n    for (var i = 0; i < C_INC * R_INC; i++) {\n        grid.push(cell);\n    }\n    return grid;\n}\n\nconst Formations = forwardRef((props, ref) => {\n    const [state, dispatch] = useContext(Context);\n    const [data, setData] = useState(state.database);\n\n\n    useImperativeHandle(ref, () => ({\n        nextFormation() {\n            if (state.formNum === data.length - 1) {\n                dispatch({ type: 'RESET_FORMATION' });\n            } else {\n                dispatch({ type: 'NEXT_FORMATION', });\n            }\n        },\n\n        prevFormation() {\n            if (state.formNum === 0) {\n                dispatch({ type: 'SET_FORMATION', num: data.length - 1 });\n            } else {\n                dispatch({ type: 'PREV_FORMATION' });\n            }\n        }\n    }));\n\n\n    const refs = {};\n\n    // const addNew = (name) => {\n    //     setData([...data, { \"name\": name, \"x\": 0, \"y\": 0 }]);\n    //     dbh.collection(\"people\").doc(name).set({\n    //         x: 0,\n    //         y: 0,\n    //     });\n    //     setDialogVisible(false);\n    // }\n\n    // function getRandomInt(max) {\n    //     return Math.floor(Math.random() * Math.floor(max));\n    // }\n\n    // useEffect(() => {\n    //     // dbh.collection(\"people\").onSnapshot(querySnapshot => {\n    //     //     const list = [];\n    //     //     querySnapshot.forEach(doc => {\n    //     //         const { x, y } = doc.data();\n    //     //         list.push({\n    //     //             name: doc.id,\n    //     //             x,\n    //     //             y,\n    //     //         });\n    //     //     });\n    //     //     const newList = list.map(function (e) {\n    //     //         e.x = e.x * GRIDC_INC;\n    //     //         e.y = e.y * GRIDR_INC;\n    //     //         return e;\n    //     //     })\n    //     //     setData(newList);\n\n    //     //     if (loading) {\n    //     //         setLoading(false);\n    //     //     }\n\n    //     // });\n\n    //     /* Need some way to handle window resizes */\n    //     // function handleResize() {\n    //     //     console.log('resized to: ', window.innerWidth, 'x', window.innerHeight);\n    //     //     for (var key in refs) {\n    //     //         console.log(key);\n    //     //     }\n\n    //     // }\n    //     // window.addEventListener('resize', handleResize)\n    // }, [loading]);\n\n    useEffect(() => {\n        for (var key in refs) {\n            var dict = data[state.formNum];\n            refs[key].move(dict[\"dancers\"][key].x, dict[\"dancers\"][key].y, dict.duration);\n            refs[key].changeColor(dict[\"dancers\"][key].color);\n        }\n    }, [state.formNum]);\n\n    function changeLocation(form, dancer, x, y) {\n        var list = data;\n        list[form][\"dancers\"][dancer].x = x;\n        list[form][\"dancers\"][dancer].y = y;\n        setData(list);\n        // setData([... ])\n        // console.log(form);\n        // dispatch({ type: 'CHANGE_FORMATION', f: form, d: dancer, xCoor: x, yCoor: y });\n    }\n\n    var elements = []\n    for (const [k, val] of Object.entries(data[state.formNum][\"dancers\"])) {\n        elements.push(<DragBall handler={changeLocation} x={val.x * GRIDC_INC} y={val.y * GRIDR_INC}\n            name={k} color={val.color} key={k} ref={(ref) => refs[k] = ref} />)\n    }\n\n    return (\n        <View style={styles.mainContainer}>\n            {/* Border of the grid*/}\n            <View style={styles.grid}>\n                <Grid id=\"grid\" flow=\"row dense\" columns={C_INC} style={{ position: 'absolute', width: \"100%\", height: \"100%\", }} gap={\"3px\"}>\n                    {/* Adjust number of rows and height of each cell */}\n                    {createGrid()}\n                </Grid>\n\n                <View>\n                    {\n                        elements\n                    }\n\n                </View>\n\n\n            </View>\n        </View>\n    );\n});\n\n\n// Change number of rows and columns later by doing css programatically\nconst styles = StyleSheet.create({\n    mainContainer: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n\n    grid: {\n        width: \"100%\",\n        height: \"500px\",\n        borderColor: \"black\",\n        alignItems: \"center\",\n    },\n\n});\n\n\nexport default Formations;","import React, { useState, useEffect, useImperativeHandle, forwardRef, useContext } from 'react'\nimport Peaks from 'peaks.js';\nimport sound from \"../assets/audio.mp3\";\nimport { Context } from '../constants/global';\n\n// Add some sort of loading for the mp3 file loading!!\n\nconst AudioPlayer = forwardRef((props, ref) => {\n    const [instance, setInstance] = useState(null);\n    const [state, dispatch] = useContext(Context);\n    const [loading, setLoading] = useState(true);\n\n\n    useImperativeHandle(ref, () => ({\n        // On mac you can use the play button on keyboard which messes up the state for the button\n        playAudio() {\n            instance.player.play();\n        },\n\n        pauseAudio() {\n            instance.player.pause();\n        },\n\n        dropPoint() {\n            // need to add id to each of these points\n            // Add additional functionality to be able to move formations around as well\n            instance.points.add({ time: instance.player.getCurrentTime(), labelText: 'Test point', color: 'black' });\n            // setPoints([...points, instance.player.getCurrentTime()]);\n            dispatch({ type: 'ADD_FORMATION', time: instance.player.getCurrentTime() });\n        }\n    }));\n\n    // idk about this\n    let binarySearch = function (arr, x, start, end) {\n\n        // Base Condition \n        if (end - start <= 1) {\n            return start;\n        }\n\n        if (x >= arr[end]) {\n            return end;\n        }\n\n        // Find the middle index \n        let mid = Math.floor((start + end) / 2);\n\n        // // Compare mid with given key x \n        // if (arr[mid]===x) return \"exact\"; \n\n        // If element at mid is greater than x, \n        // search in the left half of mid \n        if (arr[mid] > x)\n            return binarySearch(arr, x, start, mid);\n        else\n\n            // If element at mid is smaller than x, \n            // search in the right half of mid \n            return binarySearch(arr, x, mid, end);\n    }\n\n    function timeListener(time) {\n        const newForm = binarySearch(state.starts, time, 0, state.starts.length - 1);\n        // Ideally I want to only do this when its different from the previous formation\n        dispatch({ type: 'SET_FORMATION', num: newForm });\n    }\n\n    // the formations aren't showing up at first idk why\n\n\n    useEffect(() => {\n        // Run initially once\n        startFunction();\n    }, []);\n\n    useEffect(() => {\n        // Run after instance is initialized (needs to be once somehow)\n        if (instance != null && loading) {\n            instance.on('player.timeupdate', timeListener);\n\n            // Modifications\n            // const view = instance.views.getView('zoomview');\n            // console.log(view);\n            // view.enableMarkerEditing(true);\n\n            setLoading(false);\n        }\n    }, [instance, loading]);\n\n    const startFunction = () => {\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const audioContext = new AudioContext();\n\n        var initialPoints = [];\n        for (var i = 0; i < state.starts.length; i++) {\n            // Add non-editable point, with a Red color\n            initialPoints.push({ time: state.starts[i], labelText: (\"Formation #\" + i), color: \"#FF0000\" });\n        }\n\n\n        const options = {\n            containers: {\n                overview: document.getElementById('overview-container'),\n                zoomview: document.getElementById('zoomview-container')\n            },\n            mediaElement: document.querySelector('audio'),\n            webAudio: {\n                audioContext: audioContext\n            },\n\n            // customization\n            // Precision of time label of play head and point/segment markers\n            timeLabelPrecision: 2,\n\n            // Array of initial point objects\n            points: initialPoints,\n        };\n\n        setInstance(Peaks.init(options, function (err, peaks) {\n            if (err) {\n                console.error('Failed to initialize Peaks instance: ' + err.message);\n                return;\n            }\n        }));\n\n    }\n\n\n    return (\n        <div>\n            <div id=\"peaks-container\">\n                <div id=\"zoomview-container\"></div>\n                <div id=\"overview-container\"></div>\n            </div>\n            <audio>\n                <source src={sound} />\n            </audio>\n            {state.starts.toString()}\n            <br /><br />\n        </div>\n    )\n});\n\nexport default AudioPlayer;","import React, { useRef, useState } from 'react';\nimport DragDrop from '../components/DragDrop';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport AudioPlayer from '../components/AudioPlayer'\n\n// In future, maybe remove this if not necessary?\n\nconst ButtonContainer = styled.div`\n  align-items: center;\n  text-align:center;\n  margin: 10px;\n  width: 100%;\n  flex: 1;\n  column-gap: 20px;\n  justify-content: space-between;\n`;\n\nconst StyledButton = styled(Button)`\n    width: 100px;\n    margin: 10px;\n`;\n\nconst FormationsScreen = () => {\n    const dragRef = useRef(null);\n    const audioRef = useRef(null);\n\n    const [play, setPlay] = useState(\"Play\");\n    const [bpm, setBpm] = useState(0);\n\n    return (\n        <div>\n            <DragDrop ref={dragRef} />\n            <ButtonContainer>\n                {bpm}\n                <hr />\n                <StyledButton variant=\"contained\" color=\"secondary\" onClick={() => {\n                    dragRef.current.prevFormation();\n                }}>Previous</StyledButton>\n                <StyledButton variant=\"contained\" color=\"secondary\" onClick={() => {\n                    dragRef.current.nextFormation();\n                }}>Next</StyledButton>\n                <StyledButton variant=\"contained\" color=\"secondary\" onClick={() => {\n                    if (play === \"Play\") {\n                        setPlay(\"Pause\");\n                        audioRef.current.playAudio();\n                    } else {\n                        setPlay(\"Play\");\n                        audioRef.current.pauseAudio();\n                    }\n                }}>{play}</StyledButton>\n                <StyledButton variant=\"contained\" color=\"secondary\" onClick={() => {\n                    audioRef.current.dropPoint();\n                }}>New</StyledButton>\n                {/* <StyledButton variant=\"contained\" color=\"secondary\" onClick={() => {\n                    audioRef.current.dropPoint();\n                }}>Drop</StyledButton> */}\n            </ButtonContainer>\n            <div style={{ textAlign: 'center', margin: '10px', height: '450px' }}>\n                <AudioPlayer ref={audioRef} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default FormationsScreen;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Login from './screens/LoginScreen';\nimport Register from './screens/RegisterScreen';\nimport FormationScreen from './screens/FormationsScreen';\nimport Store from \"./constants/global\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Store>\n        <nav style={{ backgroundColor: 'lightgray' }}>\n          <ul>\n            <li>\n              <Link to=\"/drag\">Formations</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/drag\">\n            <FormationScreen />\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n\n        </Switch>\n      </Store>\n    </Router>\n  );\n}\n\n\n// ReactDOM.render(<App />, document.querySelector('#app'));\n\n\n// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}